// Code generated by MockGen. DO NOT EDIT.
// Source: lyrics.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLyricsRepository is a mock of LyricsRepository interface
type MockLyricsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLyricsRepositoryMockRecorder
}

// MockLyricsRepositoryMockRecorder is the mock recorder for MockLyricsRepository
type MockLyricsRepositoryMockRecorder struct {
	mock *MockLyricsRepository
}

// NewMockLyricsRepository creates a new mock instance
func NewMockLyricsRepository(ctrl *gomock.Controller) *MockLyricsRepository {
	mock := &MockLyricsRepository{ctrl: ctrl}
	mock.recorder = &MockLyricsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLyricsRepository) EXPECT() *MockLyricsRepositoryMockRecorder {
	return m.recorder
}

// GetLyrics mocks base method
func (m *MockLyricsRepository) GetLyrics(id string) Lyrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLyrics", id)
	ret0, _ := ret[0].(Lyrics)
	return ret0
}

// GetLyrics indicates an expected call of GetLyrics
func (mr *MockLyricsRepositoryMockRecorder) GetLyrics(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLyrics", reflect.TypeOf((*MockLyricsRepository)(nil).GetLyrics), id)
}

// CreateLyrics mocks base method
func (m *MockLyricsRepository) CreateLyrics(lyrics Lyrics) Lyrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLyrics", lyrics)
	ret0, _ := ret[0].(Lyrics)
	return ret0
}

// CreateLyrics indicates an expected call of CreateLyrics
func (mr *MockLyricsRepositoryMockRecorder) CreateLyrics(lyrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLyrics", reflect.TypeOf((*MockLyricsRepository)(nil).CreateLyrics), lyrics)
}
